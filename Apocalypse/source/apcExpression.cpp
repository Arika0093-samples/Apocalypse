// --------------------------------------------------------
//	apcExpression.cpp
// --------------------------------------------------------
//	apcExpression.h のメンバ関数の実体を置く
// --------------------------------------------------------
#include "Apocalypse.h"

// --------------------------------------------------------
//	Expression
// --------------------------------------------------------
//	Expression::Expression (Constructor)
// --------------------------------------------------------
				ApcExpression::ApcExpression()
{
	// 最低値と最高値を無視するよう指定する
	this->Max		= 0;
	this->Min		= 0;
	// カウンタの初期値を保存する
	StartCount		= FrameCounter::GetCount();
}

// --------------------------------------------------------
//	Expression::Function
// --------------------------------------------------------
double			ApcExpression::Function() const
{
	// 結果を一時的に保存する変数
	double Result = 0;
	// ----------------------------------------------------
	// 関数を実行する
	Result = f(FrameCounter::GetCount() - StartCount);
	// 最小値と最大値が同じでない場合
	if(Min != Max){
		// 結果が最小値以下なら
		if(Result < Min){
			// 結果を最小値にあわせる
			Result = Min;
		}
		// 結果が最大値以上なら
		if(Result > Max){
			// 結果を最大値にあわせる
			Result = Max;
		}
	}
	// 返却
	return Result;
}

// --------------------------------------------------------
//	VibrateExp
// --------------------------------------------------------
//	VibrateExp::VibrateExp
// --------------------------------------------------------
				VibrateExp::VibrateExp()
{
	// 初期値を指定する
	Amplitude = 1;
	Cycle = 360;
}

// --------------------------------------------------------
//	VibrateExp::DegToRad
// --------------------------------------------------------
inline double	VibrateExp::DegToRad(double Deg) const
{
	// radを求めて返す
	return ( Deg * DX_PI / 180.0);
}

// --------------------------------------------------------
//	VibrateExp
// --------------------------------------------------------
double			VibrateExp::f(int x) const
{
	// 結果を一時的に保存する変数
	double Result = 0;
	// ----------------------------------------------------
	// 計算する(振幅×sin((360/周期)×カウンタ))
	Result = Amplitude * sin(DegToRad((360.0/Cycle)*x)); 
	// 返却する
	return Result;
}
